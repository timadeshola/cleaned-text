package com.tim.cleanedtext;

import com.tim.cleanedtext.utils.AppUtils;
import com.vaadin.flow.component.html.Label;
import com.vaadin.flow.component.notification.Notification;
import com.vaadin.flow.component.orderedlayout.VerticalLayout;
import com.vaadin.flow.component.textfield.TextField;
import com.vaadin.flow.router.Route;
import com.vaadin.flow.server.PWA;

/**
 * String alignment
 * Two versions of a string are provided: the original and the cleaned text. Cleaned text has been produced by removing certain characters from the original. The cleaning method may vary (removal of HTML tags, removal of duplicate spaces, removal of repeated words), however the cleaned text is always generated by removing characters from the original text only, no additions or replacements are allowed during cleaning. From this taskâ€™s perspective, the cleaning method must be considered arbitrary, so no assumptions can be made about it.
 * This test consists of two parts:
 * 1 - Develop a method to align the two input strings: provided an offset in the original text, determine the corresponding offset in the cleaned text.
 * 2 - Once the console program has been written, create a Vaadin Flow project to implement a web GUI. Implement the following use case:
 * If the user is selecting a portion of the original text, highlight the corresponding cleaned text.
 */

/**
 * The main view contains a button and a click listener.
 */
@Route
@PWA(name = "Clean Text Application", shortName = "Clean Text Application")
public class MainView extends VerticalLayout {

    TextField originalText = new TextField("Original Text", textFieldStringComponentValueChangeEvent -> showCleanText());
    Label cleanedText = new Label("Cleaned Text");

    public MainView() {

        add(originalText);
        add(cleanedText);
    }

    public void showCleanText() {
        String sanitizeText = AppUtils.sanitizeText(originalText.getValue());
        cleanedText.setText(sanitizeText);
        Notification.show(cleanedText.getText()).setPosition(Notification.Position.TOP_END);
    }
}
